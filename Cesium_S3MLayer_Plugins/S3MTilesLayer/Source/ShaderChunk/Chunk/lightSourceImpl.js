var _0x3a73fa=(function(){var _0x2a1dab=!![];return function(_0x5c8114,_0x1589bb){var _0x45e230=_0x2a1dab?function(){if(_0x1589bb){var _0x41f519=_0x1589bb['apply'](_0x5c8114,arguments);return _0x1589bb=null,_0x41f519;}}:function(){};return _0x2a1dab=![],_0x45e230;};}()),_0x1efba0=_0x3a73fa(this,function(){return _0x1efba0['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x1efba0)['search']('(((.+)+)+)+$');});_0x1efba0();export default'\x0a\x0a#ifdef\x20HAS_DIR_LIGHTS\x0afor\x20(int\x20i\x20=\x200;\x20i\x20<\x20DIR_LIGHTS;\x20i++)\x20{\x0a\x20\x20\x20\x20directLight.color\x20=\x20uDirectionalLightColor[i];\x0a\x20\x20\x20\x20directLight.direction\x20=\x20uDirectionalLightDirectionEC[i];\x0a\x20\x20\x20\x20directLight.visible\x20=\x20true;\x0a\x20\x20\x20\x20directPhysical(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a}\x0a#endif\x0a\x0a#ifdef\x20HAS_POINT_LIGHTS\x0aPointLight\x20pointLight;\x0afor\x20(int\x20i\x20=\x200;\x20i\x20<\x20POINT_LIGHTS;\x20i++)\x20{\x0a\x20\x20\x20\x20pointLight.position\x20=\x20uPointLightPositionEC[i];\x0a\x20\x20\x20\x20pointLight.color\x20=\x20uPointLightColor[i];\x0a\x20\x20\x20\x20pointLight.distance\x20=\x20uPointLightDistanceAndDecay[i].x;\x0a\x20\x20\x20\x20pointLight.decay\x20=\x20uPointLightDistanceAndDecay[i].y;\x0a\x20\x20\x20\x20getPointDirectLightIrradiance(\x20pointLight,\x20geometry,\x20directLight\x20);\x0a\x20\x20\x20\x20if(!directLight.visible)\x20continue;\x0a\x20\x20\x20\x20directPhysical(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a}\x0a#endif\x0a\x0a#ifdef\x20HAS_SPOT_LIGHTS\x0aSpotLight\x20spotLight;\x0afor\x20(int\x20i\x20=\x200;\x20i\x20<\x20SPOT_LIGHTS;\x20i++)\x20{\x0a\x20\x20\x20\x20spotLight.position\x20=\x20uSpotLightPositionEC[i];\x0a\x20\x20\x20\x20spotLight.color\x20=\x20uSpotLightColor[i];\x0a\x20\x20\x20\x20spotLight.direction\x20=\x20uSpotLightDirectionEC[i];\x0a\x20\x20\x20\x20spotLight.coneCos\x20=\x20uSpotLightDistanceDecayCosPenumbra[i].z;\x0a\x20\x20\x20\x20spotLight.penumbraCos\x20=\x20uSpotLightDistanceDecayCosPenumbra[i].w;\x0a\x20\x20\x20\x20getSpotDirectLightIrradiance(\x20spotLight,\x20geometry,\x20directLight\x20);\x0a\x20\x20\x20\x20if(!directLight.visible)\x20continue;\x0a\x20\x20\x20\x20directPhysical(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a}\x0a#endif\x0a';