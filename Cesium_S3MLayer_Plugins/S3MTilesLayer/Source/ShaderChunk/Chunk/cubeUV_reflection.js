var _0x19ec4f=(function(){var _0x849136=!![];return function(_0x4ad2cc,_0x12c16f){var _0x3faf68=_0x849136?function(){if(_0x12c16f){var _0x19574c=_0x12c16f['apply'](_0x4ad2cc,arguments);return _0x12c16f=null,_0x19574c;}}:function(){};return _0x849136=![],_0x3faf68;};}()),_0x7f2726=_0x19ec4f(this,function(){return _0x7f2726['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x7f2726)['search']('(((.+)+)+)+$');});_0x7f2726();export default'\x0a\x20\x20\x20\x20#define\x20cubeUV_minMipLevel\x204.0\x0a\x09#define\x20cubeUV_minTileSize\x2016.0\x0a\x0a\x09//\x20These\x20shader\x20functions\x20convert\x20between\x20the\x20UV\x20coordinates\x20of\x20a\x20single\x20face\x20of\x0a\x09//\x20a\x20cubemap,\x20the\x200-5\x20integer\x20index\x20of\x20a\x20cube\x20face,\x20and\x20the\x20direction\x20vector\x20for\x0a\x09//\x20sampling\x20a\x20textureCube\x20(not\x20generally\x20normalized\x20).\x0a\x0a\x09float\x20getFace(\x20vec3\x20direction\x20)\x20{\x0a\x0a\x09\x09vec3\x20absDirection\x20=\x20abs(\x20direction\x20);\x0a\x0a\x09\x09float\x20face\x20=\x20-\x201.0;\x0a\x0a\x09\x09if\x20(\x20absDirection.x\x20>\x20absDirection.z\x20)\x20{\x0a\x0a\x09\x09\x09if\x20(\x20absDirection.x\x20>\x20absDirection.y\x20)\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.x\x20>\x200.0\x20?\x200.0\x20:\x203.0;\x0a\x0a\x09\x09\x09else\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201.0\x20:\x204.0;\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09if\x20(\x20absDirection.z\x20>\x20absDirection.y\x20)\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.z\x20>\x200.0\x20?\x202.0\x20:\x205.0;\x0a\x0a\x09\x09\x09else\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201.0\x20:\x204.0;\x0a\x0a\x09\x09}\x0a\x0a\x09\x09return\x20face;\x0a\x0a\x09}\x0a\x0a\x09//\x20RH\x20coordinate\x20system;\x20PMREM\x20face-indexing\x20convention\x0a\x09vec2\x20getUV(\x20vec3\x20direction,\x20float\x20face\x20)\x20{\x0a\x0a\x09\x09vec2\x20uv;\x0a\x0a\x09\x09if\x20(\x20face\x20==\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20direction.z,\x20direction.y\x20)\x20/\x20abs(\x20direction.x\x20);\x20//\x20pos\x20x\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x201.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.x,\x20-\x20direction.z\x20)\x20/\x20abs(\x20direction.y\x20);\x20//\x20pos\x20y\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x202.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.x,\x20direction.y\x20)\x20/\x20abs(\x20direction.z\x20);\x20//\x20pos\x20z\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x203.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.z,\x20direction.y\x20)\x20/\x20abs(\x20direction.x\x20);\x20//\x20neg\x20x\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x204.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.x,\x20direction.z\x20)\x20/\x20abs(\x20direction.y\x20);\x20//\x20neg\x20y\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20direction.x,\x20direction.y\x20)\x20/\x20abs(\x20direction.z\x20);\x20//\x20neg\x20z\x0a\x0a\x09\x09}\x0a\x0a\x09\x09return\x200.5\x20*\x20(\x20uv\x20+\x201.0\x20);\x0a\x0a\x09}\x0a\x0a\x09vec3\x20bilinearCubeUV(\x20sampler2D\x20envMap,\x20vec3\x20direction,\x20float\x20mipInt\x20)\x20{\x0a\x0a\x09\x09float\x20face\x20=\x20getFace(\x20direction\x20);\x0a\x0a\x09\x09float\x20filterInt\x20=\x20max(\x20cubeUV_minMipLevel\x20-\x20mipInt,\x200.0\x20);\x0a\x0a\x09\x09mipInt\x20=\x20max(\x20mipInt,\x20cubeUV_minMipLevel\x20);\x0a\x0a\x09\x09float\x20faceSize\x20=\x20exp2(\x20mipInt\x20);\x0a\x0a\x09\x09vec2\x20uv\x20=\x20getUV(\x20direction,\x20face\x20)\x20*\x20(\x20faceSize\x20-\x202.0\x20)\x20+\x201.0;\x0a\x0a\x09\x09if\x20(\x20face\x20>\x202.0\x20)\x20{\x0a\x0a\x09\x09\x09uv.y\x20+=\x20faceSize;\x0a\x0a\x09\x09\x09face\x20-=\x203.0;\x0a\x0a\x09\x09}\x0a\x0a\x09\x09uv.x\x20+=\x20face\x20*\x20faceSize;\x0a\x0a\x09\x09uv.x\x20+=\x20filterInt\x20*\x203.0\x20*\x20cubeUV_minTileSize;\x0a\x0a\x09\x09uv.y\x20+=\x204.0\x20*\x20(\x20exp2(\x20CUBEUV_MAX_MIP\x20)\x20-\x20faceSize\x20);\x0a\x0a\x09\x09uv.x\x20*=\x20CUBEUV_TEXEL_WIDTH;\x0a\x09\x09uv.y\x20*=\x20CUBEUV_TEXEL_HEIGHT;\x0a\x0a\x09\x09return\x20texture2DGradEXT(\x20envMap,\x20uv,\x20vec2(\x200.0\x20),\x20vec2(\x200.0\x20)\x20).rgb;\x20//\x20disable\x20anisotropic\x20filtering\x0a\x0a\x09}\x0a\x0a\x09//\x20These\x20defines\x20must\x20match\x20with\x20PMREMGenerator\x0a\x0a\x09#define\x20cubeUV_r0\x201.0\x0a\x09#define\x20cubeUV_v0\x200.339\x0a\x09#define\x20cubeUV_m0\x20-\x202.0\x0a\x09#define\x20cubeUV_r1\x200.8\x0a\x09#define\x20cubeUV_v1\x200.276\x0a\x09#define\x20cubeUV_m1\x20-\x201.0\x0a\x09#define\x20cubeUV_r4\x200.4\x0a\x09#define\x20cubeUV_v4\x200.046\x0a\x09#define\x20cubeUV_m4\x202.0\x0a\x09#define\x20cubeUV_r5\x200.305\x0a\x09#define\x20cubeUV_v5\x200.016\x0a\x09#define\x20cubeUV_m5\x203.0\x0a\x09#define\x20cubeUV_r6\x200.21\x0a\x09#define\x20cubeUV_v6\x200.0038\x0a\x09#define\x20cubeUV_m6\x204.0\x0a\x0a\x09float\x20roughnessToMip(\x20float\x20roughness\x20)\x20{\x0a\x0a\x09\x09float\x20mip\x20=\x200.0;\x0a\x0a\x09\x09if\x20(\x20roughness\x20>=\x20cubeUV_r1\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r0\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m1\x20-\x20cubeUV_m0\x20)\x20/\x20(\x20cubeUV_r0\x20-\x20cubeUV_r1\x20)\x20+\x20cubeUV_m0;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20roughness\x20>=\x20cubeUV_r4\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r1\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m4\x20-\x20cubeUV_m1\x20)\x20/\x20(\x20cubeUV_r1\x20-\x20cubeUV_r4\x20)\x20+\x20cubeUV_m1;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20roughness\x20>=\x20cubeUV_r5\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r4\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m5\x20-\x20cubeUV_m4\x20)\x20/\x20(\x20cubeUV_r4\x20-\x20cubeUV_r5\x20)\x20+\x20cubeUV_m4;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20roughness\x20>=\x20cubeUV_r6\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r5\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m6\x20-\x20cubeUV_m5\x20)\x20/\x20(\x20cubeUV_r5\x20-\x20cubeUV_r6\x20)\x20+\x20cubeUV_m5;\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20-\x202.0\x20*\x20log2(\x201.16\x20*\x20roughness\x20);\x20//\x201.16\x20=\x201.79^0.25\x0a\x09\x09}\x0a\x0a\x09\x09return\x20mip;\x0a\x0a\x09}\x0a\x0a\x09vec4\x20textureCubeUV(\x20sampler2D\x20envMap,\x20vec3\x20sampleDir,\x20float\x20roughness\x20)\x20{\x0a\x0a\x09\x09float\x20mip\x20=\x20clamp(\x20roughnessToMip(\x20roughness\x20),\x20cubeUV_m0,\x20CUBEUV_MAX_MIP\x20);\x0a\x0a\x09\x09float\x20mipF\x20=\x20fract(\x20mip\x20);\x0a\x0a\x09\x09float\x20mipInt\x20=\x20floor(\x20mip\x20);\x0a\x0a\x09\x09vec3\x20color0\x20=\x20bilinearCubeUV(\x20envMap,\x20sampleDir,\x20mipInt\x20);\x0a\x0a\x09\x09if\x20(\x20mipF\x20==\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09return\x20vec4(\x20color0,\x201.0\x20);\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09vec3\x20color1\x20=\x20bilinearCubeUV(\x20envMap,\x20sampleDir,\x20mipInt\x20+\x201.0\x20);\x0a\x0a\x09\x09\x09return\x20vec4(\x20mix(\x20color0,\x20color1,\x20mipF\x20),\x201.0\x20);\x0a\x0a\x09\x09}\x0a\x0a\x09}\x0a';