var _0x3ba4ec=(function(){var _0x4ec88c=!![];return function(_0x93d060,_0x27ee79){var _0x446614=_0x4ec88c?function(){if(_0x27ee79){var _0x34aa8f=_0x27ee79['apply'](_0x93d060,arguments);return _0x27ee79=null,_0x34aa8f;}}:function(){};return _0x4ec88c=![],_0x446614;};}()),_0x3ab37f=_0x3ba4ec(this,function(){return _0x3ab37f['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x3ab37f)['search']('(((.+)+)+)+$');});_0x3ab37f();export default'\x0a#ifdef\x20HAS_RAIN\x0auniform\x20float\x20uAnimationSpeed;\x0auniform\x20sampler2D\x20uRippleTexture;\x0auniform\x20float\x20uRippleScale;\x0auniform\x20float\x20uWindIntensity;\x0auniform\x20float\x20uRain;\x0auniform\x20float\x20uCameraDepth;\x0a\x20\x20\x20\x20\x0avoid\x20getTimeInfo(float\x20animationSpeed,\x20out\x20vec2\x20timeVec)\x0a{\x0a\x09float\x20time\x20=\x20czm_frameNumber\x20*\x20animationSpeed;\x0a\x09time\x20=\x20floor(30.0\x20*\x20time);\x0a\x09float\x20time_diff\x20=\x20floor(time*0.25);\x0a\x09time\x20=\x20mod(time,\x204.0);\x0a\x09time_diff\x20=\x20mod(time_diff,\x204.0);\x0a\x09timeVec\x20=\x20vec2(time,\x20time_diff);\x0a}\x0a\x0avoid\x20getPosInfo(vec4\x20posMC,\x20out\x20vec2\x20posMC_frac1,\x20out\x20vec2\x20posMC_frac2)\x0a{\x0a\x09float\x20ripple_scale\x20=\x201.0\x20/\x20uRippleScale;\x0a\x09vec2\x20posXY\x20=\x20posMC.xy\x20*\x20ripple_scale;\x0a\x09posMC_frac1\x20=\x20fract(posXY);\x0a\x09vec2\x20posStep\x20=\x20vec2(0.5);\x0a\x09posMC_frac2\x20=\x20fract(posXY\x20+\x20posStep);\x0a}\x0a\x0afloat\x20getAlpha(vec2\x20posMC_frac1)\x0a{\x0a\x09vec2\x20dist\x20=\x20(posMC_frac1\x20-\x20vec2(0.5))\x20*\x202.0;\x0a\x09dist\x20=\x20vec2(abs(dist.x),\x20abs(dist.y));\x0a\x09vec2\x20result\x20=\x20pow(dist,\x20vec2(5.0));\x0a\x09return\x20result.x\x20+\x20result.y;\x0a}\x0a\x0avec4\x20getRippleValue(sampler2D\x20uRippleTexture,\x20vec2\x20timeVec,\x20vec2\x20posMC_frac1,\x20vec2\x20posMC_frac2,\x20float\x20alpha)\x0a{\x0a\x09vec2\x20rippleUV_1\x20=\x20(timeVec\x20+\x20posMC_frac1)*0.25;\x0a\x09vec2\x20rippleUV_2\x20=\x20(timeVec\x20+\x20posMC_frac2)*0.25;\x0a\x09vec4\x20rippleValue_1\x20=\x20texture2D(uRippleTexture,\x20rippleUV_1.xy);\x0a\x09vec4\x20rippleValue_2\x20=\x20texture2D(uRippleTexture,\x20rippleUV_2.xy);\x0a\x09return\x20mix(rippleValue_1,\x20rippleValue_2,\x20alpha);\x0a}\x0a\x0avec3\x20getRippleNormal(vec4\x20rippleValue,\x20float\x20wind_intensity,\x20float\x20rain,\x20float\x20depthFade)\x0a{\x0a\x09vec2\x20rippleValueXY\x20=\x20rippleValue.xy;\x0a\x09vec2\x20rippleValueZW\x20=\x20rippleValue.zw;\x0a\x09const\x20vec2\x20_value\x20=\x20vec2(0.5);\x0a\x09vec2\x20part_1\x20=\x20(rippleValueZW\x20-\x20_value)\x20*\x20wind_intensity\x20*\x200.13;\x0a\x09vec2\x20part_2\x20=\x20(rippleValueXY\x20-\x20_value)\x20*\x200.6;\x0a\x09vec2\x20mergedValue\x20=\x20mix(part_1,\x20part_2,\x20rain)\x20*\x20depthFade;\x0a\x09return\x20vec3(mergedValue,\x201.0);\x0a}\x0a\x0afloat\x20getNormalAlpha(vec3\x20normalWS,float\x20wetness)\x0a{\x0a\x09float\x20valueZ\x20=\x20normalWS.z\x20-\x200.5;\x0a\x09float\x20wet_correction\x20=\x20wetness\x20*\x20clamp(valueZ\x20*\x202.5,\x200.0,\x201.0);\x0a\x09return\x20pow(wet_correction,\x2015.0);\x0a}\x0a\x0avec3\x20rippleNormalCorrection(vec3\x20rippleNormal,float\x20normalAlpha)\x0a{\x0a\x09const\x20vec3\x20blueNormal\x20=\x20vec3(0.0,\x200.0,\x201.0);\x0a\x09return\x20mix(blueNormal,\x20rippleNormal,\x20normalAlpha);\x0a}\x0a\x0avec3\x20rippleGenerator(sampler2D\x20uRippleTexture,\x20float\x20animationSpeed,vec3\x20normalWS,float\x20wetness)\x0a{\x0a\x09vec2\x20timeVec\x20=\x20vec2(1.0);\x0a\x09getTimeInfo(animationSpeed,\x20timeVec);\x0a\x09vec2\x20posMC_frac1\x20=\x20vec2(1.0);\x0a\x09vec2\x20posMC_frac2\x20=\x20vec2(1.0);\x0a\x09getPosInfo(vPositionMC,\x20posMC_frac1,\x20posMC_frac2);\x0a\x09float\x20alpha\x20=\x20getAlpha(posMC_frac1);\x0a\x09vec4\x20rippleValue\x20=\x20getRippleValue(uRippleTexture,\x20timeVec,\x20posMC_frac1,\x20posMC_frac2,\x20alpha);\x0a\x09vec3\x20rippleNormal\x20=\x20getRippleNormal(rippleValue,\x20uWindIntensity,\x20uRain,\x20uCameraDepth);\x0a\x09float\x20normalAlpha\x20=\x20getNormalAlpha(normalWS,\x20wetness);\x0a\x09return\x20normalize(rippleNormalCorrection(rippleNormal,\x20normalAlpha));\x0a}\x0a#endif\x0a';